name: Azure CI Workflow
on:
  push:
    branches: [ "prod" ]  
jobs:
  build:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
    - name:  Get Branch Name
      shell: bash
      run:  |
             echo "BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_ENV   
    
    - name: Check Out Latest Commit
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 

    - name: Get Docker Image Tag
      env:
        MAJOR_VERSION: ${{ vars.MAJOR_VERSION }}
        MINOR_VERSION: ${{ vars.MINOR_VERSION }}
      run: |
           echo "branch: $BRANCH"
           BUILD_NUMBER=$(/usr/bin/git rev-list --count HEAD $BRANCH) && echo "RELEASE_VERSION=$MAJOR_VERSION.$MINOR_VERSION.$BUILD_NUMBER" >> $GITHUB_ENV
      shell: bash

    - name: Create Docker Image
      env:
        APP_NAME: ${{ vars.APP_NAME }}
        FLASK_ENV: ${{ vars.FLASK_ENV }}
        GPG_KEY: ${{ secrets.GPG_KEY}}

      run: |
        docker build  --build-arg APP_NAME="$APP_NAME" --build-arg FLASK_ENV="$FLASK_ENV"  --build-arg GPG_KEY="$GPG_KEY"  -t  $APP_NAME-$BRANCH .
   
    - name: Tag the image with release version
      env:
        APP_NAME: ${{ vars. APP_NAME }}
        REPOSITORY: ${{ vars.REPOSITORY }}
      run: docker tag $APP_NAME-$BRANCH "$APP_NAME-$BRANCH:$RELEASE_VERSION" 

    - name: Tag Image with REPOSITORY Name
      env:
        APP_NAME: ${{ vars.APP_NAME }}
        REPOSITORY: ${{ vars.REPOSITORY }}
      run: docker tag $APP_NAME-$BRANCH:$RELEASE_VERSION $REPOSITORY/$APP_NAME-$BRANCH:$RELEASE_VERSION
    
    - name: Update Container Image in ACR
      uses: azure/docker-login@v2
      with:
        login-server: ${{ secrets.LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        echo pushing "${{ vars.REPOSITORY }}/${{ vars.APP_NAME }}-$BRANCH:$RELEASE_VERSION"
        docker push ${{ vars.REPOSITORY }}/${{ vars.APP_NAME }}-$BRANCH:$RELEASE_VERSION
       
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
  
    - name: Build and deploy Container App
      uses: azure/container-apps-deploy-action@v1  
      with:
        acrName: ${{ vars.REPOSITORY }} 
        containerAppName: ${{ vars.APP_NAME }}
        resourceGroup: ${{ vars.RESOURCE_GROUP }} 
        imageToDeploy: ${{ vars.REPOSITORY }}/${{ vars.APP_NAME }}-$BRANCH:$RELEASE_VERSION
        registryUsername: ${{ secrets.REGISTRY_USER }} 
        registryPassword: ${{ secrets.REGISTRY_PASSWORD }}
        acrUsername: ${{ secrets.REGISTRY_USER }} 
        acrPassword: ${{ secrets.REGISTRY_PASSWORD }}
    
 